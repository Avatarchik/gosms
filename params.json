{"name":"gosms","tagline":"Your own local SMS gateway in Go","body":"gosms\r\n-----\r\n\r\nYour own local SMS gateway\r\n\r\n- deploy in less than 1 minute\r\n- supports Windows, GNU\\Linux, Mac OS\r\n- works with GSM modems\r\n- provides API over HTTP to push messages to gateway, just like the internet based gateways do\r\n- takes care of queuing, throttling and retrying\r\n- supports multiple devices at once\r\n\r\n![gosms dashboard](https://raw.githubusercontent.com/haxpax/gosms/screenshot/screenshots/gosms.png)\r\n\r\ndeployment\r\n----------\r\n- Update conf.ini `[DEVICES]` section with your modem's COM port.\r\n  for ex. `COM10` or `/dev/USBtty2`\r\n- Run\r\n\r\nAPI specification\r\n------------------\r\n- /api/sms/ [*POST*]\r\n    - param **mobile**\r\n        - mobile number to send message to\r\n        - number should have contry code prefix\r\n        - for ex. +919890098900\r\n    - param **message**\r\n        - message text\r\n        - max length is limited to 160 characters\r\n    - response\r\n```json\r\n{\r\n  \"status\": 200,\r\n  \"message\": \"ok\"\r\n}\r\n```\r\n- /api/logs/ [*GET*]\r\n    - response\r\n```json\r\n{\r\n  \"status\": 200,\r\n  \"message\": \"ok\",\r\n  \"summary\": [ 10, 50, 2 ],\r\n  \"daycount\": { \"2015-01-22\": 10, \"2015-01-23\": 25 },\r\n  \"messages\": [\r\n    {\r\n      \"uuid\": \"d04f17c4-a32c-11e4-827f-00ffcf62442b\",\r\n      \"mobile\": \"+1858111222\",\r\n      \"body\": \"Hey! Just playing around with gosms.\",\r\n      \"status\": 1\r\n    },\r\n  ]\r\n}\r\n```\r\n    - message status codes\r\n      - 0 : Pending\r\n      - 1 : Processed\r\n      - 2 : Error\r\n\r\nplanned features\r\n-------\r\n- Allowing multiple mobile numbers with a single message in `/api/sms/`\r\n- CRUD support for messages, possibly support cancellation of message\r\n- Authentication support for API\r\n- Adding authentication for Dashboard\r\n- Send an email to admin on high failure rate\r\n\r\nbuilding from source\r\n---------------------\r\n\r\n\r\nOn Ubuntu\r\n- go get github.com/haxpax/gosms\r\n- cd $GOPATH/src/github.com/haxpax/gosms/dashboard\r\n- go build\r\n\r\nOn Windows\r\n- go get `github.com/haxpax/gosms`\r\n- Setup GCC for go-sqlite3 package\r\n    - Download MinGW from http://sourceforge.net/projects/mingw/\r\n    - Add `C:\\MinGW\\bin` to PATH\r\n    - run `mingw-get install gcc` from command line\r\n- go build\r\n\r\nrun dashboard executable. Copy assets, templates, conf.ini, dashboard[.exe] if you want to move to another directory db.sqlite is created at first run if not present, copy that too if its there\r\n\r\n\r\n","google":"UA-58937177-2","note":"Don't delete this file! It's used internally to help with page regeneration."}